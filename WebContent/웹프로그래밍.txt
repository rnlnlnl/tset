웹 개발에 필요한 이론 정리 파일

웹? 인터넷의 정보를 특정 프로그램(브라우저)을 사용해서 정보를 보여주는곳

웹 프로그래밍  -> 데이터 입출력

*통신 프로토콜 : 데이터를 주고받기 위해서 서로 지정한 약속 (통신규약)
	1) 어떤방식의 접속 2) 어떤속도 접근 3) 어떤 형태로 처리

* TCP / IP : 통신 프로토콜 중 한가지 방식
	[PC1]										[PC2]
  애플리케이션층			<-가상의 데이터 송수신->		애플리케이션층	
  트랜스포트 층(TCP/UDP)							트랜스포트 층(TCP/UDP)
  네트워크(인터넷) 층(IP)							네트워크(인터넷) 층(IP)
  데이터링크 층			<-실제 데이터 송수신->		데이터링크 층


* 애플리케이션층 : 상용 인터넷 응용 프로그램(브라우저, 카카오, 멜론,...) 사용자 사용 계층
* 트랜스포트 층(TCP/UDP) : 데이터 전송시 에러 컴출 & 정정
* 네트워크(인터넷) 층(IP) : 데이터를 패킷이라는 단위로 변경해서 정확한 위치로 전달
* 데이터링크 층 : 랜 카드 제어 및 데이터 통신을 위한 하드웨어 체크



 - 서버 : 정보를 제공해주는 컴퓨터\
 - 클라이언트 : 정보를 요청하는(제공받는) 컴푸터

 - IP주소 : 인터넷상에서 특정 컴퓨터를 구분하기 위한 값 (전화번호)
 		   XXX.XXX.XXX.XXX 숫자로 구분됨 (0~255)
 		   localhost ( 자신의 IP주소  127.0.0.1)
 - 호스트 : 인터넷상에서의 컴퓨터
 		   
 - 포트번호 : 인터넷을 사용하는 모든 프로그램을 구분하기 위한 값
 		각 프로그램간의 데이터를 통신하는 통로
 			tomcat 8080  -> 8088
			mysql 3306


 - 웹 서버 / 클라이언트
  => 사용자에게 홈페이지 화면을 보여주기 위한 컴퓨터(꺼지지 않는 컴퓨터)

								[ WEB 서버 ]			 [ WAS 서버 ]
	C : naver.com (요청)  ->   S : 요청처리			-> S : 동적 처리
	
	C : naver.com 화면    <-	요청응답(html)			<- 동적 응답

  
 - 정적데이터 : 이미지, HTML, CSS, JS(JavaScript)
  
  
 - 동적데이터 : 변화가 있는 데이터 (DB데이터)
  
  
  
  ====================================================================
  
  * 데이터 전송 방식
  1) GET방식 / get 메서드
   -> 데이터를 전달할때 파라미터를 사용해서 데이터 전달
       해당 정보를 URL의 정보에 붙혀서 전달방식
       데이터의 길이가 256byte를 넘을수 없다
    Body영역이 필요없음
       빠른 데이터 전송 가능
       보안에 취약하다(주소줄에 파라미터가 표현되기때문)
    - 정보입력 페이지, 정보출력 페이지
    
    EX)
    www.naver.com?id=itwill & password=1234
    
  2) POST방식 / post 메서드
   -> 데이터를 전달할때 파라미터를 사용해서 데이터 전달
       해당정보를 본문 body에 붙혀서(담아서) 전달방식 
       데이터 길이 제약이 없음 (파일업로드)
       느린 데이터 전송방식 (get방식에 비해 상대적으로)
       보안에 우수하다(주소줄에 파라미터가 표현X)
    -정보처리 페이지 
    
    EX)
    www.naver.com
  
  
  
  * JSP 구성요소
  1) JSP지시어(Directive) 페이지 지시어 : jsp 페이지가 실행될때 필요한 정보 지정
  					필요한 정보를 웹컨테이너(tomcat)에게 알려서 처리하는 지시하는 부분
  <%@ page ~  %> : 페이지의 설정 하는 동작 (책p150~
  <%@ include ~  %> : 특정파일, 데이터를 페이지 안에 추가하는 설정 (책p157~
  <%@ taglib ~  %> : (책p159~
  
  2) JSP 선언문(Declaration) : 전역변수, 메서드 선언하는 영역
  
  <%! 
  	String name ="홍길동";
  	public void method(){
  	
  	}
   %>
  
  3) 스크립틀릿 : jsp 코드를 실행하는 영역 (지역변수, 메서드 호출)
  
  <%
  	jsp/java 코드 사용
  %>
  
  4) 표현식 : html 화면에 java코드의 결과를 출력 (책~p176
  
  <%= 변수 %>
  <%= 수식 계산 %>
  <%= 리턴값이 있는 메서드 호출 %>
  
  
  
  
  * include  (JSP)
  
  1) 액션 태그 include  <jsp:include  ~>                 //< ~~~: > 이렇게 생긴것들을 액션 태그라고 부른다  
  => jsp 페이지를 java 파일로 변경후(컴파일) 파일을 추가
     (jsp 페이지를 서블릿파일로 컴파일 처리후 파일을 추가) 
    => 페이지 추가
    
  2) 디렉티브 include  <%@ include ~ %>
  => jsp/page가 컴파일 되기전에 소스코드를 include후 컴파일
    => 페이지에 공통적으로 사용되어야 하는 경우
  
  
  * bit : 2진수 0 / 1 데이터를 저장할수 있는 최소 공간크기
    byte : bit데이터가 8개 모여있는 공간
    1KB : 1024byte (2^10)
    1MB : 1024KB
    
    => 5GB <=> 5,368,709,120 byte
  
  * 기본형 데이터타입(8개)
  boolean - 논리형 - 1byte(8bit)
  char -문자형 - 2byte(16bit)
  byte -정수형 - 2byte
  short -정수형 - 2byte
  int -정수형 - 4byte
  long -정수형 - 8byte
  float -실수형 - 4byte
  double - 실수형 - 8byte
  
  * 자바 기본형 타입의 형변환
  1) 묵시적 형변환(자동으로 형변환이 되는것)(자동 형변환) : 데이터 타입의 메모리 크기가 
  		작은곳에서  큰곳으로 저장될때발생하는 형변환
  	=> 컴파일러가 자동으로 형변환
  int i = 100;
  long L = i;
  
  
  2) 명시적 형변환(강제로 형변환을 해줘야 하는것)(강제적 형변환) : 데이터타입의 메모리가 
  		큰곳에서 작은곳으로 저장될때 발생하는 형변환
  	  => 컴파일러가 자동으로 형변환X (메모리 크기 때문에 문제 발생 가능성이 있기때문)
  	  => * 에러가 발생한다는 것을 개발자가 인지한다. 그래도 해당 타입을 사용하겠다.
  	  
  long L = 100L;
  int i = L;  => 에러발생
  int i = (int)L;  명시적 형변환
  
  
  
    클래스    ->(메모리에 올리기)->  객체(인스턴스)
  			  new
  		        인스턴스화
    붕어빵틀 ->   (가열)   ->   붕어빵
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  